<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.tl.service.mapper.UserMapper">

<!--    解决数据库字段与entity中不一致-->
<!--    <resultMap id="userResultMap" type="User">-->
<!--        <id property="id" column="user_id" />-->
<!--        <result property="username" column="user_name"/>-->
<!--        <result property="password" column="hashed_password"/>-->
<!--    </resultMap>-->
<!--    <cache/>-->

    <resultMap id="userResultMap" type="com.tl.service.domain.User">
        <id property="id" column="id" />
        <result property="loginname" column="loginname"/>
        <result property="pwd" column="pwd"/>
        <result property="nick" column="nick"/>
        <result property="avatar" column="avatar"/>
        <result property="avatarbig" column="avatarbig"/>
        <result property="ipid" column="ipid"/>
        <result property="remark" column="remark"/>
        <result property="status" column="status"/>
        <result property="createtime" column="createtime"/>
        <result property="updatetime" column="updatetime"/>
        <collection property="orders" ofType="com.tl.service.domain.Order" javaType="java.util.ArrayList">
            <id property="id" column="order_id"/>
            <result property="openid" column="openid"/>
            <result property="totalFee" column="totalFee"/>
            <result property="orderId" column="orderId"/>
            <result property="state" column="state"/>
            <result property="goodsId" column="goodsId"/>
            <result property="specsId" column="specsId"/>
            <result property="address" column="address"/>
            <result property="consignee" column="consignee"/>
            <result property="mobile" column="mobile"/>
            <result property="userIp" column="userIp"/>

            <result property="createtime" column="order_createtime"/>
            <result property="updatetime" column="order_updatetime"/>
        </collection>
    </resultMap>



    <select id="findUserOrder" resultMap="userResultMap" >
        SELECT u.*,
               o.id as order_id,o.orderId ,o.openid,o.totalFee,o.state,o.goodsId,o.specsId,o.address,o.consignee,o.mobile,o.userIp
               ,o.createtime as order_createtime, o.updatetime as order_updatetime
        FROM tl.user u LEFT JOIN tl.order o on u.id=o.userId;
    </select>


    <sql id="select_user">
        select * from User
    </sql>
    
    
    <select id="findAll" resultType="com.tl.service.domain.User" >
        select * from User
  </select>


    <select id="findAllByLoginName" resultType="user"  >
        select * from User
        <where>
            <if test="loginName!= null">
                and loginname=#{loginName}
            </if>
        </where>

    </select>


    <select id="findUserBySubQuery" resultType="User" parameterType="java.util.List">
        SELECT *
        FROM user
        <where>
            <if test="ids!=null and ids.size()>0">
                <foreach item="item" index="index" collection="ids"
                         open=" id in (" separator="," close=")" >
                    #{item}
                </foreach>
            </if>
        </where>

    </select>



   <insert id="insertUser" parameterType="com.tl.service.domain.User" useGeneratedKeys="true"  keyProperty="id">
       insert into user (loginname, pwd, nick, avatar, ipid, remark, status) values
            (#{loginname},#{pwd},#{nick}, #{avatar}, #{ipid}, #{remark}, #{status})
   </insert>

<!--    <insert id="insertUser" parameterType="com.tl.domain.User" >-->
<!--        <selectKey keyProperty="id" keyColumn="id" resultType="Integer" order="AFTER">-->
<!--            select last_insert_id()-->
<!--        </selectKey>-->
<!--       insert into user (loginname, pwd, nick, avatar, ipid, remark, status) values-->
<!--            (#{loginname},#{pwd},#{nick}, #{avatar}, #{ipid}, #{remark}, #{status})-->
<!--   </insert>-->



    <update id="updateUser">
        update user set status =#{param1} where id=#{param2}
    </update>

    <delete id="deleteUser" parameterType="java.lang.Integer">
        delete from user where id=#{idaaaa}
    </delete>


    <select id="findById" resultType="com.tl.service.domain.User">
        select * from user where id =#{id};
    </select>


    <!--mybatis 一对多 延迟加载-->

    <resultMap id="userDelay" type="com.tl.service.domain.User">
        <id property="id" column="id" />
        <result property="loginname" column="loginname"/>
        <result property="pwd" column="pwd"/>
        <result property="nick" column="nick"/>
        <result property="avatar" column="avatar"/>
        <result property="avatarbig" column="avatarbig"/>
        <result property="ipid" column="ipid"/>
        <result property="remark" column="remark"/>
        <result property="status" column="status"/>
        <result property="createtime" column="createtime"/>
        <result property="updatetime" column="updatetime"/>
        <collection property="orders" ofType="com.tl.domain.Order" javaType="java.util.ArrayList" column="id" select="com.tl.dao.OrderDao.findById" />
    </resultMap>


    <select id="findAllDelay" resultMap="userDelay" >
        select * from User limit 2
    </select>


</mapper>